// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var React = require("react");
var Js_option = require("bs-platform/lib/js/js_option.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");

var component = ReasonReact.statelessComponent("BarFill");

function optElement(className, opt) {
  if (opt !== undefined) {
    return React.createElement("div", {
                className: className
              }, Caml_option.valFromOption(opt));
  } else {
    return null;
  }
}

function fillTextElement(opt) {
  if (opt !== undefined) {
    return React.createElement("span", {
                className: "fill-text"
              }, opt);
  } else {
    return null;
  }
}

function make(percent, className, onClick, title, fillText, dropElement, topLeft, topRight, belowLeft, belowRight, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              var tmp = { };
              if (className !== undefined) {
                tmp.className = Caml_option.valFromOption(className);
              }
              var tmp$1 = {
                className: "progress " + Js_option.getWithDefault("progress-default", className)
              };
              if (title !== undefined) {
                tmp$1.title = Caml_option.valFromOption(title);
              }
              if (onClick !== undefined) {
                tmp$1.onClick = Caml_option.valFromOption(onClick);
              }
              return React.createElement("div", tmp, React.createElement("div", {
                              className: "d-flex justify-content-between"
                            }, optElement("top-left text-left -font-light-grey", topLeft), optElement("top-right -text-right font-weight-bold", topRight)), React.createElement("div", tmp$1, React.createElement("div", {
                                  className: "fillbar",
                                  style: {
                                    width: String(percent) + "%"
                                  }
                                }, fillTextElement(fillText), optElement("drop-fill", dropElement))), optElement("below-left text-left", belowLeft), optElement("below-right text-right", belowRight));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.optElement = optElement;
exports.fillTextElement = fillTextElement;
exports.make = make;
/* component Not a pure module */
