// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Link = require("./Link.bs.js");
var React = require("react");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var Js_option = require("bs-platform/lib/js/js_option.js");
var ListLabels = require("bs-platform/lib/js/listLabels.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");

function isSelected(currentItem, items, current) {
  var matchesNotMe = ListLabels.exists((function (x) {
          if (x[/* match */1] === current) {
            return x[/* match */1] !== currentItem[/* match */1];
          } else {
            return false;
          }
        }), items);
  var match = currentItem[/* matchIfNone */2];
  if (match) {
    var match$1 = matchesNotMe === false;
    if (match$1) {
      return true;
    } else {
      return false;
    }
  } else {
    return currentItem[/* match */1] === current;
  }
}

var component = ReasonReact.statelessComponent("SubNavRe");

function make(items, current, className, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              return React.createElement("nav", {
                          className: "submenu " + Js_option.getWithDefault("submenu-default", className)
                        }, Belt_List.toArray(Belt_List.map(items, (function (item) {
                                    var match = isSelected(item, items, current);
                                    return React.createElement("li", {
                                                key: item[/* match */1],
                                                className: match ? "selected" : ""
                                              }, ReasonReact.element(undefined, undefined, Link.make(item[/* href */0], undefined, undefined, undefined, undefined, /* array */[item[/* caption */3]])));
                                  }))));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.isSelected = isSelected;
exports.component = component;
exports.make = make;
/* component Not a pure module */
